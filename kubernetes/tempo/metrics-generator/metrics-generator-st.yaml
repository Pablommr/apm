apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: metrics-generator
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: metrics-generator
  serviceName: "metrics-generator"
  replicas: 1
  template:
    metadata:
      annotations:
        karpenter.sh/do-not-disrupt: "true"
      labels:
        app: metrics-generator
        system: tempo
    spec:
      securityContext:
        runAsUser: 0
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app: metrics-generator
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        karpenter.sh/nodepool: general
      containers:
      - name: metrics-generator
        args: [ "-target=metrics-generator", "-config.file=/etc/tempo.yaml" ]
        image: pablommr/grafana-tempo:v2.8.1
        ports:
        - containerPort: 7946
          name: memberlist
        - containerPort: 3200
          name: http-metrics
        livenessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - mountPath: /etc/tempo.yaml
          name: tempo-config
          subPath: tempo.yaml
        - mountPath: /var/tempo/generator/wal
          name: tempo-wal
      volumes:
      - name: tempo-config
        configMap: 
          name: tempo-configmap
  volumeClaimTemplates:
  - metadata:
      name: tempo-wal
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 30Gi
      storageClassName: "gp2"